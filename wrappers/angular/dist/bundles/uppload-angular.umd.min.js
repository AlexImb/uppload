!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/core"),require("uppload")):"function"==typeof define&&define.amd?define("uppload-angular",["exports","@angular/core","uppload"],o):o(e["uppload-angular"]={},e.ng.core,e.Uppload)}(this,function(e,o,p){"use strict";p=p&&p.hasOwnProperty("default")?p["default"]:p;function t(){}function n(){}function r(){}var a=function i(){};a.cropEnd="cropEnd",a.cropMove="cropMove",a.cropStart="cropStart",a.dragEnter="dragEnter",a.dragLeave="dragLeave",a.dragOver="dragOver",a.fileDropped="fileDropped",a.fileError="fileError",a.fileSelected="fileSelected",a.fileUploaded="fileUploaded",a.modalClosed="modalClosed",a.modalOpened="modalOpened",a.pageChanged="pageChanged",a.uploadError="uploadError",a.uploadStarted="uploadStarted";var d=(l.prototype.ngOnInit=function(){var t=this;this.uppload=new p(this.settings),Object.keys(a).forEach(function(o){t.uppload.on(o,function(e){return t.event.emit({event:o,payload:e})})})},l.prototype.changePage=function(e){return this.uppload.changePage(e)},l.prototype.closeModal=function(){return this.uppload.closeModal()},l.prototype.openModal=function(){return this.uppload.openModal()},l.prototype.updateValue=function(e){return this.uppload.updateValue(e)},l.prototype.uploadFile=function(e){return this.uppload.uploadFile(e)},l);function l(){this.event=new o.EventEmitter}d.decorators=[{type:o.Component,args:[{selector:"uppload",template:"\n    <ng-content></ng-content>\n  "}]}],d.propDecorators={settings:[{type:o.Input}],event:[{type:o.Output}]};var u=function c(){};u.decorators=[{type:o.NgModule,args:[{declarations:[d],exports:[d]}]}],e.UpploadEvents=a,e.UpploadSettings=r,e.UpploadCrop=n,e.UpploadEndpoint=t,e.UpploadComponent=d,e.UpploadModule=u,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=uppload-angular.umd.min.js.map
